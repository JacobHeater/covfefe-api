paths:
  /users:
    get:
      tags:
        - users
      summary: Returns a list of users.
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - users
      summary: Creates a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: 'OK'
  /users/{userId}:
    get:
      tags:
        - users
      summary: Returns a single user by id.
      parameters:
        - name: userId
          in: path
          required: true
          description: The unique identifier of the user.
          schema:
            type: string 
      responses:
        '200':
          description: 'A single user by id.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - users
      summary: 'Updates a user by id.'
      parameters:
        - name: userId
          in: path
          required: true
          description: The unique identifier of the user.
          schema:
            type: string
      responses:
        '200':
          description: OK
    delete:
      tags:
        - users
      summary: Deletes a user by id.
      parameters:
        - name: userId
          in: path
          required: true
          description: The unique identifier of the user.
          schema:
            type: string
      responses:
        '200':
          description: OK
  /users/login:
    post:
      tags:
        - users
      summary: Authenticate a single user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
